<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="testWebsocketList.csp" application="/csp/vkfb/" default="1"><![CDATA[
<html>
<head>
  <!-- link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" -->
  <link rel="stylesheet" href="lib/bootstrap/css/bootstrap.min.css">
  <!-- link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-modal/2.2.6/css/bootstrap-modal.min.css" -->
  <link rel="stylesheet" href="lib/bootstrap-modal.min.css">
  <!-- <link rel="stylesheet" href="lib/twitter-css/embed-tweet.css" /> -->

  <!-- link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css" -->
  <link rel="stylesheet" href="lib/bootstrap-theme.min.css">


  <!-- script src="https://code.jquery.com/jquery-1.11.2.min.js"></script -->
  <script src="lib/jquery-1.11.2.min.js"></script>
  <!-- script src="https://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script -->
  <script src="lib/jquery-ui.min.js"></script>
  <!-- script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script -->
  <script src="lib/bootstrap/js/bootstrap.min.js"></script>
  <!-- script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-modal/2.2.6/js/bootstrap-modal.min.js"></script -->
  <script src="lib/bootstrap-modal.min.js"></script>

  <!-- script src='http://cdn.ractivejs.org/latest/ractive.min.js'></script -->
  <script src='lib/ractive.min.js'></script>
  <style type="text/css">
  .tweets-container {
      height: 100vh;
      display: flex;
      flex-direction: column;
      overflow-y: hidden;
  }
  .list-unstyled {
      overflow-y: hidden;
  }
  .flex-module-inner {
    flex-grow: 1;    
  }
  .fadeout {
    /* position: relative; */
    position: fixed;
    bottom: 3em;
    height: 6em;
    z-index: 5;
    background: -webkit-linear-gradient(
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 1) 100%
    ); 
    background-image: -moz-linear-gradient(
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 1) 100%
    );
    background-image: -o-linear-gradient(
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 1) 100%
    );
    background-image: linear-gradient(
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 1) 100%
    );
    background-image: -ms-linear-gradient(
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 1) 100%
    );
  }
  /* sentiment visualization */
kbd.sentiment-neg5 {
    background-color: #F8696B !important;
}
kbd.sentiment-neg4 {
    background-color: #F9826F !important;
}
kbd.sentiment-neg3 {
    background-color: #FA9D75 !important;
}
kbd.sentiment-neg2 {
    background-color: #FCB77A !important;
}
kbd.sentiment-neg1 {
    background-color: #FDD17F !important;
}
kbd.sentiment-neutral {
    /* border-left: 4px solid #FFEB84 ; */
    /* background-color: #e1e8ed !important; */
}
kbd.sentiment-pos1 {
    background-color: #E0E383 !important;
}
kbd.sentiment-pos2 {
    background-color: #C1DA81 !important;
}
kbd.sentiment-pos3 {
    background-color: #A2D07F !important;
}
kbd.sentiment-pos4 {
    background-color: #83C77D !important;
}
kbd.sentiment-pos5 {
    background-color: #63BE7B !important;
}

.shadow-panel {
    min-width: 18em;
    padding: 1em;

    /* http://colorzilla.com/gradient-editor/#ffffff+0,f1f1f1+49,e1e1e1+52,f6f6f6+100 */
    background: #ffffff; /* Old browsers */
    background: -moz-linear-gradient(top,  #ffffff 0%, #f1f1f1 49%, #e1e1e1 52%, #f6f6f6 100%); /* FF3.6-15 */
    background: -webkit-linear-gradient(top,  #ffffff 0%,#f1f1f1 49%,#e1e1e1 52%,#f6f6f6 100%); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(to bottom,  #ffffff 0%,#f1f1f1 49%,#e1e1e1 52%,#f6f6f6 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#f6f6f6',GradientType=0 ); /* IE6-9 */

    /* http://css3gen.com/box-shadow/ */
    -webkit-box-shadow: 1px 1px 12px 2px rgba(50, 50, 50, 0.68);
    -moz-box-shadow:    1px 1px 12px 2px rgba(50, 50, 50, 0.68);
    box-shadow:         1px 1px 12px 2px rgba(50, 50, 50, 0.68);

    -moz-transition:-moz-transform .15s linear;
    -o-transition:-o-transform .15s linear;
    -webkit-transition:-webkit-transform .15s linear;
}

#tweets-stats {
    position: fixed;
    z-index: 10;


    bottom: 4em;
    right: 4em;
    min-height: 10em;
    /*min-width: 11em; */
    padding: 1em;
}
#trends-container {
    position: fixed;
    z-index: 9;


    top: 10em;
    right: 4em;
    min-height: 10em;
    /*min-width: 11em; */
    padding: 1em;
}
</style>

<script id='trends-template' type='text/ractive'>
<div class="Trends module trends">
    <ul class="trend-items js-trends list-unstyled" id="trends-table">
    {{#trendsCollection }}
        <li class="trend-item js-trend-item  ">
        <a class="js-nav trend-name" href="#" data-fixed="{{fixed}}">{{sourceId}}
        <span class="{{ fixed ? 'glyphicon glyphicon-asterisk' : ''}}" aria-hidden="true"></span>
        </a>
        </li>
    {{/trendsCollection}}
    </ul>
</div>
</script>
<script id='tweets-template' type='text/ractive'>
    <div class="flex-module-inner">
        <ul class="list-unstyled">
        {{#tweets }}
            <li class="trend-item js-trend-item  ">
            <kbd class='{{ getSentimentStyle(score) }}' >{{user}}</kbd> &nbsp; {{text}}
            </li>
        {{/tweets}}
        </ul>
        <div class="fadeout"></div>
    </div>
</script>

<script language="JavaScript" type="text/javascript">
var ws;
var wsserver = "#($system.CSP.GetDefaultApp($namespace))#/TWReader.WebSocket.Test.cls";
var restserver = "#($system.CSP.GetDefaultApp($namespace))#/rest/";
var tweets = [];
var uniqueTweets = {};
var tweetsSlice = [];
var vlist;
var maxN = 30;

var hardcodedTrends = [
    '#ФреддиФолловитТоммо',
    '#Арбузов',
    '#Рада',
    '#ТвиттерскиеВЖизни'
].map(function (s) { return { sourceId: s, fixed: true}; });

var sentimentStyles = {
        "-5": "sentiment-neg5",
        "-4": "sentiment-neg5",
        "-3": "sentiment-neg4",
        "-2": "sentiment-neg3",
        "-1": "sentiment-neg2",
        "0": "sentiment-neutral",
        "1": "sentiment-pos2",
        "2": "sentiment-pos3",
        "3": "sentiment-pos4",
        "4": "sentiment-pos5",
        "5": "sentiment-pos5"
    };

function getSentimentStyle(score) {
    if (!score) {
        return sentimentStyles[0];
    }
    score = score < 0 ? Math.floor(score) : Math.ceil(score);
    score = score > 5 ? 5 : (score < -5 ? -5 : score);
    return sentimentStyles[score];
}

var positiveCount = 0, negativeCount = 0, neutralCount = 0;

function countSentimentScores() {
    for (var i in tweets) {
        var tweet = tweets[i];
        countSingleScore(tweet, false);
    }
    updateCounters();
}

function countSingleScore(tweet, redraw) {
    var score = tweet.score;
    if (score > 0) {
        positiveCount++;
    } else if (score < 0) {
        negativeCount++;
    } else {
        neutralCount++;
    }
    if (redraw) { 
        updateCounters();
    }
}

function updateCounters() {
    $('#likes-number').text(positiveCount);
    $('#dislikes-number').text(negativeCount);
    $('#neutral-number').text(neutralCount);
}

if ((typeof(WebSocket) == 'undefined') && (typeof(MozWebSocket) != 'undefined')) {
    WebSocket = MozWebSocket;
}

function init() {
    //connect();
    
    // load prior trends
    $.ajax({
        url: restserver + 'Domain/TWReaderRus/GetTop/' + Math.round(maxN/2)
    }).then(function(data) {

        //console.log(data.children);
        updateTrends(data.children.map(
                        function (o) { 
                            return { 
                                sourceId: o.entity, 
                                fixed: false, 
                                volume: o.frequency
                            }; 
                        }));
    });

    // load last tweets from prio sessions
    $.ajax({
        url: restserver + 'Domain/GetLastTweets/' + maxN
    }).then(function(data) {
        console.log(data.children);
        tweets = data.children;
        updateWholeRactive(tweets, maxN);
    });

    $('#btn-connect').on('click', function() {
        if (!ws) {
            connect();
        } else {
            getmoretweets();
        }
    });
    
    $('#btn-disconnect').on('click', function() {
        disconnect();
    });
    
    $('#btn-dettach').on('click', function() {
        // detach(); // FIXME - TODO
    });
}

function connect() {
    if (ws) {
        return;
    }
    tweets = [];
    ws = new WebSocket(((window.location.protocol == "https:") ? "wss:" : "ws:") + "//" + window.location.host + wsserver);

    ws.onopen = function(event) {
        //$("#connected").html("Connected to WebSocket server: <b>" + decodeURIComponent(wsserver) + "</b>");
        console.log("Connected to WebSocket server: <b>" + decodeURIComponent(wsserver) + "</b>");
        gettweets();
    };

    ws.onmessage = function(event) {
        //$("#output").html("<b>" + event.data + "</b>");
        console.log("<b>" + event.data + "</b>");
    };

    ws.onerror = function(event) {
        //$("#connected").html("Connection Error - Check that the web server supports web sockets");
        alert("Connection Error - Check that the web server supports web sockets");
    };

    ws.onclose = function(event) {
        ws = null;
        //$("#connected").html("Connection Closed");
        console.log("Connection Closed");
    }
}

function send(command, message) {
    if (ws) {
        var op = { cmd: command, val: message };
        ws.send(JSON.stringify(op));
    }

}

function updateWholeRactive(tweets, maxN) {
    tweetsSlice = tweets.slice(0, maxN - 1)
    ractiveTweets.set('tweets', tweetsSlice);
    countSentimentScores();
}

function updateSingleRactive(tweet) {
    var id = tweet.id;
    if (uniqueTweets.hasOwnProperty(id)) {
        console.log('Duplicated tweet id:' + id + ', text:' + tweet.text);
        return;
    }
    if (!tweet.text || !tweet.user)
    {
        console.log('Empty tweet id:' + id);
        return;
    }
    if (tweetsSlice.length >= maxN) {
        tweetsSlice.pop();
    }
    uniqueTweets[id] = 1;
    tweetsSlice.unshift(tweet);
    ractiveTweets.set('tweets', tweetsSlice);
    countSingleScore(tweet, true);
}

function isPlainData(json) {
    return (json.data !== undefined);
}
function handleSimpleCommands(data) {
    //console.log('simple command: ' + data);
    if (/\bEOL\b/.test(data)) {
        console.log('end of tweets chunk: ' + tweets.length);
        window.setTimeout(function() {
            getmoretweets();
        }, 500);
    }
}
function gettweets() {
    if (ws) {
        ws.onmessage = function(event) {
            var obj = JSON.parse(event.data);
            //tweets.push(obj);
            if (!isPlainData(obj)) {
                tweets.unshift(obj);
                updateWholeRactive(tweets, maxN);
            } else {
                handleSimpleCommands(obj.data);
            }
        };
        console.log('initiated tweetsall message');
        send('tweetsall', '');
    }
}
function getmoretweets() {
    if (ws) {
        ws.onmessage = function(event) {
            var obj = JSON.parse(event.data);
            //tweets.push(obj);
            if (!isPlainData(obj)) {
                tweets.unshift(obj);
                updateSingleRactive(obj);
            } else {
                handleSimpleCommands(obj.data);
            }
        };
        send('tweets', '');
    }
}
//window.getmoretweets = getmoretweets;

function disconnect() {
    if (ws) {
        send('exit','');
        ws.close();
    }
}

</script>

</head>

<body onload="init();">

<div class="container">
    <div class="page-header">
        <h2>Cach&eacute; Processed Twitter Stream Demo</h2>
        <div class="btn-group btn-group-xs" role="group" aria-label="...">
            <button type="button" id="btn-connect"    class="btn btn-success"><span class="glyphicon glyphicon-play"></span>&nbsp;Connect</button>
            <button type="button" id="btn-detach"     class="btn btn-warning"><span class="glyphicon glyphicon-pause"></span>&nbsp;Detach</button>
            <button type="button" id="btn-disconnect" class="btn btn-danger"><span  class="glyphicon glyphicon-stop"></span>&nbsp;Disconnect</button>
        </div>
        
        <div class="btn-group  btn-group-xs" id="select-menu">
            <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Selected Geo <span id="select-geo-location" class="badge">Kiev</span>
            </button>
            <ul class="dropdown-menu">
                <!-- See woeid explorer @ http://isithackday.com/geoplanet-explorer/index.php -->
                <li><a href="#" data-woeid="2122265" data-country="Russia" >Moscow</a></li>
                <li><a href="#" data-woeid="2123260" data-country="Russia" >Saint-Petersburg</a></li>
                <li><a href="#" data-woeid="2121267" data-country="Russia" >Kazan</a></li>
                <!-- li><a href="#" data-woeid="2124298" data-country="Russia" >Volgograd</a></li>
                <li><a href="#" data-woeid="2124288" data-country="Russia" >Vladivostock</a></li -->
                <li class="active"><a href="#" data-woeid="23424936">Whole Russia</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#" data-woeid="924938" data-country="Ukraine" >Kyiv</a></li>
                <li><a href="#" data-woeid="922137" data-country="Ukraine" >Kharkiv</a></li>
                <li><a href="#" data-woeid="929398" data-country="Ukraine" >Odesa</a></li>
                <li><a href="#" data-woeid="924943" data-country="Ukraine" >Lviv</a></li>
                <li class="active"><a href="#" data-woeid="23424976">Whole Ukraine</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#" data-woeid="2264962" data-country="Kazakhstan" >Astana</a></li>
                <li><a href="#" data-woeid="2255777" data-country="Kazakhstan" >Almaty</a></li>
                <!-- li><a href="#" data-woeid="2261214" data-country="Kazakhstan" >Qaraghandy</a></li -->
                <li class="active"><a href="#" data-woeid="23424871">Whole Kazakhstan</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#" id="select-geo">Select map location<span id="select-geo-location" class="badge">...</span></a></li>
            </ul>
        </div>

    </div>
    <div id="trends-container" class="shadow-panel">
    </div>
    <div id="tweets-stats" class="shadow-panel">
        <h4>Sentiment Analysis Stats:</h4>
        <dl class="dl-horizontal">
            <dt class="text-success"><span class="glyphicon glyphicon-thumbs-up"></span>&nbsp;Likes:</dt>
                <dd id="likes-number" class="text-success"></dd>
            <dt class="text-danger"><span class="glyphicon glyphicon-thumbs-down"></span>&nbsp;Dislikes:</dt>
                <dd id="dislikes-number" class="text-danger"></dd>
            <dt><span class="glyphicon glyphicon-asterisk"></span>&nbsp;Unknown:</dt>
                <dd id="neutral-number"></dd>
        </dl>
    </div>

    <div id="tweets-container"></div>

</div>

</body>

<script>
    var trendsCollection = [];
    var ractiveTweets = new Ractive({
        el: '#tweets-container',
        template: '#tweets-template',
        data: {
            tweets: tweets,
            getSentimentStyle: getSentimentStyle
        },
    });

    var ractiveTrends = new Ractive({
        el: '#trends-container',
        template: '#trends-template',
        data: {
            trendsCollection: trendsCollection,
        },
    });

    // FIXME - get rid of hardcoded
    $(document).ready(function() {
        updateTrends(hardcodedTrends);
    })
    function updateTrends(trends) {
        ractiveTrends.set('trendsCollection', trends);
    }

</script>
</html>
]]></CSP>
</Export>

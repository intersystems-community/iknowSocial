<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="testWebsocketList.csp" application="/csp/vkfb/" default="1"><![CDATA[
<html>
<head>
  <!-- link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" -->
  <link rel="stylesheet" href="lib/bootstrap.min.css">
  <!-- link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-modal/2.2.6/css/bootstrap-modal.min.css" -->
  <link rel="stylesheet" href="lib/bootstrap-modal.min.css">

  <!-- link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css" -->
  <link rel="stylesheet" href="lib/bootstrap-theme.min.css">


  <!-- script src="https://code.jquery.com/jquery-1.11.2.min.js"></script -->
  <script src="lib/jquery-1.11.2.min.js"></script>
  <!-- script src="https://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script -->
  <script src="lib/jquery-ui.min.js"></script>
  <!-- script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script -->
  <script src="lib/bootstrap.min.js"></script>
  <!-- script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-modal/2.2.6/js/bootstrap-modal.min.js"></script -->
  <script src="lib/bootstrap-modal.min.js"></script>

  <!-- script src='http://cdn.ractivejs.org/latest/ractive.min.js'></script -->
  <script src='lib/ractive.min.js'></script>

<script id='tweets-template' type='text/ractive'>
    <div class="flex-module-inner">
        <ul class="list-unstyled">
        {{#tweets }}
            <li class="trend-item js-trend-item  ">
            <kbd>{{user}}</kbd> &nbsp; {{text}}
            </li>
        {{/tweets}}
        </ul>
    </div>
</script>

<script language="JavaScript" type="text/javascript">
var ws;
var wsserver = "#($system.CSP.GetDefaultApp($namespace))#/TWReader.WebSocket.Test.cls"
var tweets = [];
var vlist;

if ((typeof(WebSocket) == 'undefined') && (typeof(MozWebSocket) != 'undefined')) {
    WebSocket = MozWebSocket;
}

function init() {
    connect();
}

function connect() {
    if (ws) {
        return;
    }
    ws = new WebSocket(((window.location.protocol == "https:") ? "wss:" : "ws:") + "//" + window.location.host + wsserver);

    ws.onopen = function(event) {
        //$("#connected").html("Connected to WebSocket server: <b>" + decodeURIComponent(wsserver) + "</b>");
        console.log("Connected to WebSocket server: <b>" + decodeURIComponent(wsserver) + "</b>");
        gettweets();
    };

    ws.onmessage = function(event) {
        //$("#output").html("<b>" + event.data + "</b>");
        console.log("<b>" + event.data + "</b>");
    };

    ws.onerror = function(event) {
        //$("#connected").html("Connection Error - Check that the web server supports web sockets");
        alert("Connection Error - Check that the web server supports web sockets");
    };

    ws.onclose = function(event) {
        ws = null;
        //$("#connected").html("Connection Closed");
        console.log("Connection Closed");
    }
}
function send(command, message) {
    if (ws) {
        var op = { cmd: command, val: message };
        ws.send(JSON.stringify(op));
    }

}

function updateRactive(tweets, maxN) {
    ractiveTweets.set('tweets', tweets.slice(0, maxN - 1));
}

function gettweets() {
    if (ws) {
        ws.onmessage = function(event) {
            var obj = JSON.parse(event.data);
            //tweets.push(obj);
            tweets.unshift(obj);
            updateRactive(tweets, 20);
        };
        send('tweets', '');
    }
}
function disconnect() {
    if (ws) {
        send('exit','');
        ws.close();
    }
}

</script>

</head>

<body onload="init();">

<div class="container">


    <div class="page-header">
        <h2>WebSocket Echo Demonstration</h2>
    </div>

    <!-- <div id="connected">Not Connected</div>

    -->
    <!--<div>Get tweets: <input id="GetTweetsButton" class="form-group" type="button" value="gettweets" onclick="gettweets();" /></div>
    </div>-->

    <div id="tweets-container"></div>

</div>

</body>

<script>
var ractiveTweets = new Ractive({
    el: '#tweets-container',
    template: '#tweets-template',
    data: {
        tweets: tweets
    },
});
  
</script>
</html>
]]></CSP>
</Export>

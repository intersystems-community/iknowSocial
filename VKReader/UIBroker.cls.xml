<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="VKReader.UIBroker">
<Super>Util.UIBroker</Super>
<TimeCreated>63623,17389.188202</TimeCreated>

<Method name="DrawTable">
<ClassMethod>1</ClassMethod>
<FormalSpec>shouldCountEC:%String=""</FormalSpec>
<Implementation><![CDATA[
	set context = ##class(VKReader.Data.Context).%New()
	if ($length(shouldCountEC) > 0) {
		do context.CalculateEmotionalColoring()
	}
	
	set totalResult = context.GetAllPostsJSON()
	&js<
		posts = (#(totalResult)#).posts;
		console.log(posts);
		drawTable("#main-table", posts, ["title", "date", "time", "city", "EC"]);
	>
]]></Implementation>
</Method>

<Method name="AddMorePostsWithinContext">
<ClassMethod>1</ClassMethod>
<FormalSpec>shouldClearDomain:%String,numberOfSources:%String,query:%String</FormalSpec>
<Implementation><![CDATA[
	if (##class(Util.Misc).IsInteger(numberOfSources)) {
		if (numberOfSources > ##class(VKReader.Requests.APIPublicMethodsCaller).%GetParameter("MaxEntityQueryCount")) {
			set numberOfSources = ##class(VKReader.Requests.APIPublicMethodsCaller).%GetParameter("MaxEntityQueryCount")
		}
		set context = ##class(VKReader.Data.Context).%New(shouldClearDomain)
		do context.AddMorePosts(query, numberOfSources)
	} else {
		&js<console.log("Incorrect value for number of posts.")>
	}
	do ..DrawTable()
	&js<
		$("#add-sources-modal").modal('hide');
	   	$("#add-sources-modal .progress").css("display", "none");
	    $("#add-sources-button").prop('disabled', false);
	>
]]></Implementation>
</Method>
</Class>
</Export>

<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="TWReader.Rest.Handler">
<IncludeCode>%IKPublic</IncludeCode>
<Super>%CSP.REST</Super>
<TimeCreated>63957,66107.801703</TimeCreated>

<XData name="UrlMap">
<Data><![CDATA[
<Routes>

<Route Url="/Domain/:domain/GetTop/:maxSize" Method="GET" Call="GetTopConcepts"/>
<Route Url="/Domain/:domain/GetTopRel/:maxSize" Method="GET" Call="GetTopRelations"/>
<Route Url="/Domain/GetLastTweets/:maxSize" Method="GET" Call="GetLastTweetsBrief"/>
<Route Url="/Domain/GetTrendTweets/:trend/:maxSize" Method="GET" Call="GetTrendTweets"/>
<Route Url="/Trends/:woeid" Method="GET" Call="GetTrends"/>
<Route Url="/TrendsGeo/:lat/:long" Method="GET" Call="GetTrendsGeo"/>

</Routes>
]]></Data>
</XData>

<Method name="ExecQuery">
<ClassMethod>1</ClassMethod>
<FormalSpec>sqlQuery:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    #dim status As %Status = $$$OK
    
    try {
        #dim utf8 As %String = ""

        if ($data(%request)) {
          set %response.CharSet     = ##class(%SYS.NLS.Table).GetCSPTable()
          set %response.ContentType = "application/json"
          set utf8 = "u"
        }
        do ##class(%ZEN.Auxiliary.jsonSQLProvider).%WriteJSONFromSQL(,sqlQuery,"tw"_utf8)
        
    } catch (e) {
        set status = e.AsStatus()
    }
    quit status
]]></Implementation>
</Method>

<Method name="GetTopAny">
<ClassMethod>1</ClassMethod>
<FormalSpec>domainId:%Integer,nMaximum:%Integer,enttype:%Integer=$$$ENTTYPECONCEPT</FormalSpec>
<Implementation><![CDATA[
    #dim query As %String ="select * from %iKnow_Queries.EntityQAPI_GetTop("_domainId_", 1, "_$get(nMaximum, 10)_",,,,"_enttype_",,,1)"
    quit ..ExecQuery(query)
]]></Implementation>
</Method>

<Method name="GetTopConcepts">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDomain:%String,nMaximum:%Integer</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    #dim objDomain As %iKnow.Domain = ##class(%iKnow.Domain).Open(pDomain)
    #dim domainId As %Integer = objDomain.Id

    if '$isobject(objDomain) {
        return objDomain
    }
    quit ..GetTopAny(domainId, nMaximum, $$$ENTTYPECONCEPT)
]]></Implementation>
</Method>

<Method name="GetTopRelations">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDomain:%String,nMaximum:%Integer</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    #dim objDomain As %iKnow.Domain = ##class(%iKnow.Domain).Open(pDomain)
    #dim domainId As %Integer = objDomain.Id

    if '$isobject(objDomain) {
        return objDomain
    }
    quit ..GetTopAny(domainId, nMaximum, $$$ENTTYPERELATION)
]]></Implementation>
</Method>

<Method name="GetLastTweetsBrief">
<ClassMethod>1</ClassMethod>
<FormalSpec>nMaximum:%Integer=10</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    #dim query As %String = "select top "_nMaximum_" ID, ""User"" as ""user"", CleanText as text, SentimentScore as score from Twreader_Data.Tweet order by ID desc"
    quit ..ExecQuery(query)
]]></Implementation>
</Method>

<Method name="GetTrendTweets">
<ClassMethod>1</ClassMethod>
<FormalSpec>query:%String,nMaximum:%Integer=100</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set sql = "SELECT top "_ nMaximum _ " T.ID, T.Coordinates, T.CreatedAt, T.FavoriteCount, T.Lang, T.Place, " _
              "T.Retweeted, T.RetweetCount, T.Source, T.Text, " _
              "U.ScreenName, U.Name As FullName, T.CalculatedPlace As Location, U.ProfileImageUrl, T.SentimentScore " _
              "FROM TWReader_Data.Tweet T, TWReader_Data.""User"" U " _
              "WHERE T.""User"" = U.screenname and %sqlupper(trend) = %sqlupper('" _ query _"')"
    quit ..ExecQuery(sql)
]]></Implementation>
</Method>

<Method name="GetTrends">
<ClassMethod>1</ClassMethod>
<FormalSpec>woeid:%String,city:%String="",country:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    #dim status As %Status = $$$OK
    try {

        #dim utf8 As %String = ""
        #dim response As %ZEN.proxyObject
        #dim %status As %Status = ##class(TWReader.Rest.Api).GetTrendsByPlace(.response, woeid)
        set response = response.GetAt(1)
        
        if ($data(%request)) {
          set %response.CharSet     = ##class(%SYS.NLS.Table).GetCSPTable()
          set %response.ContentType = "application/json"
          set utf8                  = "u"
        }
        if (city'="") {
            set response.city = city
        }
        if (country'="") {
            set response.country = country
        }
        set status = ##class(%ZEN.Auxiliary.jsonProvider).%ObjectToJSON(response,,,utf8)
    } catch (e) {
        set status = e.AsStatus()
    }
    quit status
]]></Implementation>
</Method>

<Method name="GetTrendsGeo">
<ClassMethod>1</ClassMethod>
<FormalSpec>lat:%String,long:%String</FormalSpec>
<Implementation><![CDATA[
    #dim place As %ZEN.proxyObject
    do ##class(TWReader.Rest.Api).GetPlaceByCoords(.place, lat, long)
    #dim localtionObject As %ZEN.proxyObject = place.GetAt(1)
    #dim woeid As %String = localtionObject.woeid
    #dim city As %String = localtionObject.name
    #dim country As %String = localtionObject.country
    quit ..GetTrends(woeid, city, country)
]]></Implementation>
</Method>
</Class>
</Export>

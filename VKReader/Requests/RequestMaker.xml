<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="VKReader.Requests.RequestMaker">
<Description>
 This class provides ability to form http-requests</Description>
<Super>%RegisteredObject</Super>
<TimeCreated>63466,52744.38293</TimeCreated>

<Parameter name="APIVersion">
<Description>
 Hold API version for VK API. </Description>
<Type>%String</Type>
<Default>5.8</Default>
</Parameter>

<Method name="RequestArrayToQueryString">
<Description><![CDATA[
 Build the query string, of the form "location[?a[=b][&c[=d]...]]", where parameters for query are taken from parameters argument and url-encoded.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>location:%String,parameters:%ArrayOfDataTypes</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	#dim queryString as %String = ""
	set queryString = location _ ..ArrayToEncodedParameterString(parameters)
	quit queryString
]]></Implementation>
</Method>

<Method name="ArrayToEncodedParameterString">
<Description><![CDATA[
 Build the parameter string, of the form "[?a[=b][&c[=d]...]]", where parameters for query are taken from parameters argument and url-encoded.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>a:%ArrayOfDataTypes</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	#dim parameterString as %String = ""
	#dim k as %String = ""
	do a.SetAt(..#APIVersion, "v")
	set k = ""
	while (1)
	{
		#dim v as %String = a.GetNext(.k)
		quit:k=""  
		do ..AppendEncodedParameterToParameterString(.parameterString, k, v)
	}
	quit parameterString
]]></Implementation>
</Method>

<Method name="AppendEncodedParameterToParameterString">
<Description>
 Given parameter string (actually arbitrary string) append parameter specified by key from k and value from v to parameter string.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&parameterString:%String,k:%String,v:%String=""]]></FormalSpec>
<Implementation><![CDATA[
	if (k '= "") {
		if ($length(parameterString) > 0) {
			set parameterString = parameterString _ "&"
		} else {
			set parameterString = "?"
		}
		if (v = "") {
			set parameterString = parameterString _ ##class(Utils).UrlEncode(k)
		} else {
			set parameterString = parameterString _ ##class(Utils).UrlEncode(k) _ "=" _ ##class(Utils).UrlEncode(v)
		}
	}
]]></Implementation>
</Method>
</Class>
</Export>

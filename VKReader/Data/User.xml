<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="VKReader.Data.User">
<Description><![CDATA[
This class mirrors (with some properties disabled) functionality of vk user class.<br>
For more information see: http://vk.com/dev/fields]]></Description>
<Super>%Persistent</Super>
<TimeCreated>63470,55253.859944</TimeCreated>

<Property name="ID">
<Description>
Holds user's vk id. This property is unique, has IdKey and PrimaryKey on it.</Description>
<Type>%Integer</Type>
<Required>1</Required>
<Parameter name="MINVAL" value="0"/>
</Property>

<Index name="IDKey">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>ID</Properties>
<Unique>1</Unique>
</Index>

<Property name="FirstName">
<Description>
 Holds user's first name.</Description>
<Type>%String</Type>
<Required>1</Required>
</Property>

<Property name="LastName">
<Description>
 Holds user's last name.</Description>
<Type>%String</Type>
<Required>1</Required>
</Property>

<Property name="Deactivated">
<Description><![CDATA[
Holds user's state in vk system.<br>
'existing' - everything is just fine.<br>
'deleted' - user has his account deleted.<br>
'banned' - user has his account banned.<br>]]></Description>
<Type>%String</Type>
<Parameter name="VALUELIST" value="-existing-deleted-banned"/>
</Property>

<Property name="Hidden">
<Description><![CDATA[
Holds 1 iff user set his account up as hidden.<br>
Holds 0 otherwise.<br>]]></Description>
<Type>%Boolean</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="Sex">
<Description><![CDATA[
Holds value corresponding to user's sex.<br>
'0' - user hasn't set this setting yet.
'1' - female.
'2' - male.]]></Description>
<Type>%String</Type>
<Parameter name="DISPLAYLIST" value="-N/A-Female-Male"/>
<Parameter name="VALUELIST" value="-0-1-2"/>
</Property>

<Property name="DOB">
<Description>
Holds user's date of birth in horolog format.</Description>
<Type>%Date</Type>
</Property>

<Property name="City">
<Description>
 Holds city specified on his page as city user lives in right now </Description>
<Type>%String</Type>
</Property>

<Property name="Country">
<Description>
 Holds country defined by city specified on his page where user lives in right now </Description>
<Type>%String</Type>
</Property>

<Method name="%OnNew">
<Description>
Given %Zen.proxyObject with corresponding fields, initializes the object.</Description>
<FormalSpec>oProxy:%ZEN.proxyObject=""</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	if (oProxy '= "") {
		set ..Deactivated = oProxy."deactivated"
		if (..Deactivated = "") {
			set ..Deactivated = "existing"
		}
		set ..ID = oProxy."id"
		set ..FirstName = oProxy."first_name"
		if (..FirstName = "") {
			set ..FirstName = "N/A"
		}
		set ..LastName = oProxy."last_name"
		if (..LastName = "") {
			set ..LastName = "N/A"
		}
		if (oProxy."hidden" '= "") {
			set ..Hidden = oProxy."hidden"
			if (..Hidden = 1) {
				//quit $$$OK // Got strange behaviour here: it returns as 1, but still delivers other fields.
			}
		}
		set ..Sex = oProxy."sex"
		if (oProxy."bdate" '= "") {
			set ..DOB = ##class(VKReader.Utils).ConvertVKDateToHorolog(oProxy.bdate)
		}
		if (oProxy."city" '= "") {
			set ..City = oProxy.city.title
		}
		if (oProxy."country" '= "") {
			set ..Country = oProxy.country.title
		}
		
	} 
	set status = ..%ValidateObject()
	quit status
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^VKReader.Data.UserD</DataLocation>
<DefaultData>UserDefaultData</DefaultData>
<IdLocation>^VKReader.Data.UserD</IdLocation>
<IndexLocation>^VKReader.Data.UserI</IndexLocation>
<StreamLocation>^VKReader.Data.UserS</StreamLocation>
<Data name="UserDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>FirstName</Value>
</Value>
<Value name="3">
<Value>LastName</Value>
</Value>
<Value name="4">
<Value>Deactivated</Value>
</Value>
<Value name="5">
<Value>Hidden</Value>
</Value>
<Value name="6">
<Value>Sex</Value>
</Value>
<Value name="7">
<Value>DOB</Value>
</Value>
<Value name="8">
<Value>City</Value>
</Value>
<Value name="9">
<Value>Country</Value>
</Value>
<Value name="10">
<Value>HomeTown</Value>
</Value>
</Data>
</Storage>

<Method name="HasValidIntegerFields">
<Private>1</Private>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	quit (##class(VKReader.Utils).IsInteger(..ID))
]]></Implementation>
</Method>

<Method name="%OnValidateObject">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%ValidateObject</METHOD> method to 
provide notification that the current object is being validated.

<P>If this method returns an error then <METHOD>%ValidateObject</METHOD> will fail.]]></Description>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	if ('..HasValidIntegerFields()) {
		set status = $system.Status.Error(5001, "Invalid integers values.")
		quit status
	}
	quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>

<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Misc.ApprovedEmotionalMarker">
<Super>Misc.EmotionalMarker</Super>
<TimeCreated>63580,46399.004074</TimeCreated>

<Method name="ProposeMarker">
<ClassMethod>1</ClassMethod>
<FormalSpec>entity:%String,weght:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set newMarker = ##class(Misc.ProposedEmotionalMarker).%New(entity, weight)
	set status = newMarker.%Save()
	quit status
]]></Implementation>
</Method>

<Method name="ProposeEnclosingDictionaryForMarkerWithinDomain">
<ClassMethod>1</ClassMethod>
<FormalSpec>entity:%String,weight:%String,domainId:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	kill similarResult
	do ##class(%iKnow.Queries.EntityAPI).GetSimilar(.similarResult, domainId, entity, 1, 0, , ,$$$USEWORDS)
			
	set status = $$$OK
	if '($data(similarResult(1))) { 
		quit status
	}
				
	set j = 1
	while $data(similarResult(j)) {
				
		set similarEntityId = $list(similarResult(j), 1)
		set similarEntity = ##class(%iKnow.Queries.EntityAPI).GetValue(domainId, similarEntityId)
				
		if (similarEntity '= entity) {
			set status = $$$ADDSC(status, ##class(Misc.ApprovedEmotionalMarker).ProposeMarker(similarEntity, weight))
		}
		set j = j + 1
	}
	quit status
]]></Implementation>
</Method>

<Method name="ProposeEnclosingDictionaryWithinDomain">
<ClassMethod>1</ClassMethod>
<FormalSpec>domainId:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set query = "select distinct * from Misc.ApprovedEmotionalMarker"
	set statement = ##class(%SQL.Statement).%New()
	set status = statement.%Prepare(query)
	quit:$$$ISERR(status) status
	set result = statement.%Execute()
	set arr = ##class(%ArrayOfDataTypes).%New()
	while result.%Next() {
		set weight = result.Weight
		set entity = result.Entity
		set localStatus = ##class(Misc.ApprovedEmotionalMarker).ProposeEnclosingDictionaryForMarkerWithinDomain(entity, weight, domainId)
		if ($$$ISOK(localStatus)) {
			w "{" _ entity _ ", " _ weight _ "} enclosure was succesfully proposed", ! 
		} else {
			w "Something went wrong", !
		}
		set status = $$$ADDSC(status, localStatus)
	}
	quit status
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>
</Export>

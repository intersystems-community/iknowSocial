<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="map.CSP" application="/csp/iknowsocial/" default="1"><![CDATA[
<html>
<head>
  <title>Map Colorer</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
  <link rel="stylesheet" href="custom.css">
  <script src="http://code.jquery.com/jquery-1.11.2.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
  <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
  <script src="custom.js"></script>
  <script src="geo.js"></script>
  <script language="JavaScript">
  	
  	
  	$(document).ready(function() {
	  	postCallback = function() {
  			var geoPosts = GeoPost.getFromPosts();
  			posts = geoPosts;
    		console.log(geoPosts);
    		for (var key in geoPosts) {
    			//L.circle(geoPosts[key].toTuple(), 20000).addTo(map);
    		}
    		var clusters = GeoPoint.clusterize(posts, UkraineCities);
    		var ECDistanceUnit = GeoPost.getECDistanceUnit(posts, UkraineCities);
    		var gradient = generateGYRGradient();
    		var relations = GeoPost.getECRelations(clusters);
    		for (var key in UkraineCities) {
	    		var radius = GeoPost.getTotalAbsoluteEC(clusters[key]) * ECDistanceUnit;
    			L.circle(UkraineCities[key].toTuple(), radius, {
    				color : gradient[Math.max(Math.floor(relations[key] * gradient.length) - 1, 0)]
    			}).addTo(map);
    		}
  		}
	  	
    	var map = L.map('map', {
      		center: [49, 32],
      		zoom: 5
    	});
    	L.tileLayer('http://otile1.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png', {
      		attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
      		maxZoom: 18
    	}).addTo(map);
    	for (var key in UkraineCities) {
	    	var marker = L.marker(UkraineCities[key].toTuple()).addTo(map);
    		marker.bindPopup("<b>" + key + "</b>");
    	}
    	
	});
  </script>
</head>
<body>
  <nav class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
      <div class="navbar-header">
        <a class="navbar-brand" href="#">Map Colorer</a>
      </div>
      <div class="collapse navbar-collapse">
      </div>
    </div>
  </nav>
  <div class="container">
    <div class="row">
      <div class="col-md-10 col-md-offset-1">
        
      </div>
    </div>
    <div class="row" style="margin-top:10px">
      <div class="col-md-6">
      	<div class="panel panel-default">
        	<div id="map"></div>
        </div>
      </div>
      <div class="col-md-6">
      	<div class="panel panel-default">
          <table class="table" id="map-table-header">
              <thead>
                <tr>
                  <th>SourceId</th>
                  <th>Title</th>
                  <th>Lat</th>
                  <th>Long</th>
                </tr>
              </thead>
          </table>
          <div class="table-content big-content-wrapper">
            <table class="table" id="map-table">
              <tbody>
              	 <script language="JavaScript">
              	 	#call(VKReader.UIBroker.DrawTable("", "['title', 'latitude', 'longitude']", "#map-table"))#
               </script>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>


</body>
</html>
]]></CSP>
</Export>

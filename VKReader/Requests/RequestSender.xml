<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="VKReader.Requests.RequestSender">
<Super>%RegisteredObject</Super>
<TimeCreated>63468,61996.197714</TimeCreated>

<Parameter name="SSLConfigurationName">
<Default>VKAPI</Default>
</Parameter>

<Parameter name="RequestTest">
<Default>0</Default>
</Parameter>

<Method name="SendHttpRequest">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[server:%String="api.vk.com",location:%String,parameters:%ArrayOfDataTypes,&responseText:%String(MAXLEN=1000000),requestType:%Integer=""]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	if (requestType = "") {
		set requestType = ..#RequestTest
	}
	#dim req as %Net.HttpRequest = ##class(%Net.HttpRequest).%New()
	set req.Server = server
	set req.Https = 1
	set req.SSLConfiguration = ..#SSLConfigurationName
	
	#dim k as %String = ""
	#dim v as %String = ""
	// 0 => request made, no request printout, 1 => request printout, no request, 2 => request printout and request made
	if (requestType '= 0) {
		write "Request:",!
		write "Server: ", req.Server, ", Location: ", req.Location, !
	}
	#dim status as %Status = $$$OK
	set status = req.Get(##class(VKReader.Requests.RequestMaker).RequestArrayToQueryString(location, parameters), requestType)
	
	if ($$$ISOK(status)) {
		#dim response as %String = ""
		if (requestType '= 1) {
			#dim res as %Net.HttpResponse = req.HttpResponse
			if ($data(res)) {
				write "Response: ", res.StatusCode, ", ", res.StatusLine, ", ", res.ReasonPhrase, !
			}
			if ($$$ISOK(status)) {
				#dim responseLength as %Integer = 1000000
				set response = res.Data.Read(.responseLength)
				write "Response type: ", $classname(res.Data), !
				write "Response length: ", $length(response), ", ", responseLength, !
			}
		}
		set responseText = response
	} else {
		set responseText = ""
	}
	quit status
]]></Implementation>
</Method>
</Class>
</Export>

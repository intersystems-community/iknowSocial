<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="testWebsocketVList.csp" application="/csp/vkfb/" default="1"><![CDATA[
<html>
<head>
  <!-- link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" -->
  <link rel="stylesheet" href="lib/bootstrap.min.css">
  <!-- link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-modal/2.2.6/css/bootstrap-modal.min.css" -->
  <link rel="stylesheet" href="lib/bootstrap-modal.min.css">

  <!-- link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css" -->
  <link rel="stylesheet" href="lib/bootstrap-theme.min.css">


  <!-- script src="https://code.jquery.com/jquery-1.11.2.min.js"></script -->
  <script src="lib/jquery-1.11.2.min.js"></script>
  <!-- script src="https://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script -->
  <script src="lib/jquery-ui.min.js"></script>
  <!-- script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script -->
  <script src="lib/bootstrap.min.js"></script>
  <!-- script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-modal/2.2.6/js/bootstrap-modal.min.js"></script -->
  <script src="lib/bootstrap-modal.min.js"></script>

  <script src="lib/jquery.simple.timer.js"></script>
  <script src="lib/vlist.js"></script>

<style>
.days {
    float: left;
    margin-right: 4px;
}
.hours {
    float: left;
}
.minutes {
    float: left;
}
.seconds {
    float: left;
}
.clearDiv {
    clear: both;
}
</style>

<script language="JavaScript" type="text/javascript">
var ws;
var wsserver = "#($system.CSP.GetDefaultApp($namespace))#/TWReader.WebSocket.Test.cls"
var tweets = [];
var vlist;

if ((typeof(WebSocket) == 'undefined') && (typeof(MozWebSocket) != 'undefined')) {
    WebSocket = MozWebSocket;
}

function generatorFn(row) {
    //el.innerHTML = "<p>ITEM " + row + "</p>";
    var obj = tweets[row];
    var text = '';
    var username = '';
    if (typeof(obj) !== 'undefined') {
        text = obj.text;
        username = obj.user;
    } 
    var el = document.createElement("div");
    el.innerHTML = '<b>' + username + '</b>:&nbsp;' + text;
    return el;
}


$(document).ready(function() {
    vlist = new VirtualList({
        h: 400, //window.innerHeight, // FIXME
        itemHeight: 20, // FIXME
        totalRows: 0, // 100000,
        generatorFn: generatorFn 
    });

    vlist.container.classList.add("container");
    $('#stream').append($(vlist.container));
})

function init() {
    state(false);
    connect();
}

function connect() {
    if (ws) {
        return;
    }
    ws = new WebSocket(((window.location.protocol == "https:") ? "wss:" : "ws:") + "//" + window.location.host + wsserver);

    ws.onopen = function(event) {
        state(true);
        $("#connected").html("Connected to WebSocket server: <b>" + decodeURIComponent(wsserver) + "</b>");
    };

    ws.onmessage = function(event) {
        $("#output").html("<b>" + event.data + "</b>");
    };

    ws.onerror = function(event) {
        $("#connected").html("Connection Error - Check that the web server supports web sockets");
    };

    ws.onclose = function(event) {
        ws = null;
        state(false);
        $("#connected").html("Connection Closed");
    }
}
function send(command, message) {
    if (ws) {
        var op = { cmd: command, val: message };
        ws.send(JSON.stringify(op));
    }

}
function gettweets() {
    if (ws) {
        ws.onmessage = function(event) {
            var obj = JSON.parse(event.data);
            //tweets.push(obj);
            tweets.unshift(obj);
            vlist.totalRows = tweets.length;
            //$(vlist).trigger('resize');
            vlist._renderChunk(vlist.container, 0);
            //$(vlist).hide().show(0);
            //$('#stream').append('<p>' + obj.text + '</p>');
        };
        send('tweets', '');
    }
}
function disconnect() {
    if (ws) {
        send('exit','');
        ws.close();
    }
}

function state(connected) {
    $('#ConnectButton').prop('disabled', connected);
    $('#DisconnectButton').prop('disabled', !connected);
}

function settimer(value) {
    //alert(value);
    var countdown = $('#countdown');
    countdown.attr('data-seconds-left', value);
    send('timer', value);
    countdown.show();
    countdown.startTimer({
        onComplete: function(){
            console.log('Coutdown Completed');
            countdown.hide();
        }
    });

}
</script>

</head>

<body onload="init();">

<div class="container">


    <div class="page-header">
        <h2>WebSocket Echo Demonstration</h2>
    </div>

    <div id="connected">Not Connected</div>

    <div>Connect websocket: <input id="ConnectButton" class="form-group" type="button" value="connect" onclick="connect();" /></div>
    <div>Disconnect websocket: <input id="DisconnectButton" class="form-group" type="button" value="disconnect" onclick="disconnect();" /></div>
    <!-- <div>Set timer: <input id="SetTimerButton" class="form-group" type="button" value="settimer" onclick="settimer($('#inputValue').val());" />
        <b><span class="timer" id="countdown" style="display:none" data-seconds-left="60"></span></b>
    </div> -->
    <div>Get tweets: <input id="GetTweetsButton" class="form-group" type="button" value="gettweets" onclick="gettweets();" /></div>

    <div id="main" class="hidden">
    Enter Message <!-- (Enter 'exit' to quit) -->: <input type="text" id="inputValue" name="message" class="form-group" value="" size="40" 
                                                        onchange="send('echo', this.value); return false" />
    </div>

    <div>Response from Cach&eacute; Server ... <span class="well well-sm" id="output"></span></div>

    <div class="container" id="stream"></div>

</div>

</body>
<script>
  
</script>
</html>
]]></CSP>
</Export>

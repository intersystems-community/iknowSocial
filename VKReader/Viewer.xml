<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="VKReader.Viewer">
<IncludeCode>%IKInclude</IncludeCode>
<Super>%ZEN.Component.page</Super>
<TimeCreated>63502,44509.188378</TimeCreated>

<Property name="Domain">
<Type>%Integer</Type>
</Property>

<Property name="CurrentPage">
<Description>
ID of the domain used by this demo
Current page of results</Description>
<Type>%Integer</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="PageSize">
<Type>%Integer</Type>
<InitialExpression>100</InitialExpression>
</Property>

<Property name="CurrentAction">
<Description>
Current action, as selected by the user</Description>
<Type>%String</Type>
</Property>

<Property name="SelectedSource">
<Description>
Source ID as selected by the user when clicking on an action</Description>
<Type>%Integer</Type>
</Property>

<Property name="SelectedQuery">
<Description>
Selected Query as selected by the user when clicking on an action</Description>
<Type>%String</Type>
</Property>

<Property name="SelectedNumberOfSources">
<Description>
Selected number of sources as selected by the user when clicking on an action</Description>
<Type>%Integer</Type>
<InitialExpression>10</InitialExpression>
</Property>

<Property name="SelectedClearDomain">
<Description>
Selected if user checked the option to clear the domain on before adding more posts</Description>
<Type>%Integer</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="SummaryLength">
<Description>
Length of the summary to be displayed in the article reading pane (Module 3, exercise 6)</Description>
<Type>%Integer</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="SelectedEntity">
<Description>
Entity ID as selected by the user when clicking on an entity (Module 3, exercise 6)</Description>
<Type>%Integer</Type>
</Property>

<Property name="Subtitle">
<Description><![CDATA[
Subtitle, as derived by <method>RefreshTables</method>]]></Description>
<Type>%String</Type>
<InitialExpression>"Recent posts."</InitialExpression>
</Property>

<XData name="Contents">
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<page title="iKnowSocial" layout="vertical" width="100%" height="100%" >
<titleBox title="Posts reader." titleStyle="font-size: 28px;" />
<hgroup width="100%" cellVAlign="middle">
<label id="lblSubtitle" label="#(%page.Subtitle)#" width="80%"
labelStyle="font-size: 20px;" />
<spacer width="10" />
<image src="deepsee/ds2_bookmarks_44.png" enclosingStyle="padding-top:5px;"
  onclick ="zen('showArticle').show();"
   height="40" />
<image src="deepsee/ds2_plus_44.png" enclosingStyle="padding-top:5px;"
  onclick ="zen('addMoreSources').show();"
   height="40" />
</hgroup>
<spacer height="20" />
<tablePane id="tblSources" caption="Articles" rowSelect="false" showRowSelector="false" nowrap="0"
sql="SELECT SourceId, ExternalId FROM VKReader.ViewerSources" width="100%">
<column colName="ID" hidden="true" />
<column colName="ExternalId" hidden="true" />
<column header="Title" OnDrawCell="DrawSource" style="padding:5px; white-space:normal;"   />
<column header="Date" OnDrawCell="DrawSourceMetaDate" seed="PostDate" />
<column header="Time" OnDrawCell="DrawSourceMetaTime" seed="PostTime" />
<column header="City" OnDrawCell="DrawSourceMeta" seed="AuthorCity"/>
<column header="Country" OnDrawCell="DrawSourceMeta" seed="AuthorCountry"/>
<column header="DOB" OnDrawCell="DrawSourceMetaDate" seed="AuthorDOB"/>
<column header="Sex" OnDrawCell="DrawSourceMetaSex" seed="AuthorSex"/>
<column header="Link" OnDrawCell="DrawSourceMetaLinkToProfile" seed="AuthorID"/>
<column header="Actions" OnDrawCell="DrawSourceActions" style="text-align:center;" />
</tablePane>
<hgroup width="100%" cellAlign="right" id="pageControls">
<button caption="&lt;&lt;" onclick="zenPage.nextPage(-1);" />
<spacer width="5" />
<button caption="&gt;&gt;" onclick="zenPage.nextPage(+1);" />
<spacer width="5" />
<text id="PageSize" value="100" name="PageSize"/>
<spacer width="5" />
<button caption="Update Pagesize" name="Submit" onclick="zenPage.refreshAll()"/>
<spacer width="5" />
</hgroup>

<modalGroup id="modArticle" >
<titleBox id="titArticle" />
<vgroup>
<html id="htmlArticle" OnDrawContent="DrawArticle" />
</vgroup>
</modalGroup>

<modalGroup id="showArticle" >
<titleBox id="titShowArticle" />
<vgroup>
<html id="htmlShowArticle" OnDrawContent="DrawArticle" />
<hgroup cellAlign="right" width="100%" labelPosition="left">
<text title="Summary length" size="2" id="txtArticleId" />
<spacer width="20" />
<button caption="show" onclick="zenPage.showArticle();" />
</hgroup>
</vgroup>
</modalGroup>

<modalGroup id="addMoreSources">
<titleBox id="titAddMoreSources"/>
<hgroup cellAlign="center" width="100%" labelPosition="left">
<checkbox caption="clear domain" id="chkClear"/>
<text title="Number of posts" size="5" id="numPosts" label="number of posts"/>
<text title="Tag to query" size="10" id="txtQuery" label="query tag"/>
<button caption="add posts" onclick="zenPage.addMorePosts();" />
</hgroup>
</modalGroup>
</page>
]]></Data>
</XData>

<Method name="RefreshTables">
<Description>
Refreshes the contents of the main sources table based on the values of the different page
properties containing the current action, user selections and filter criteria</Description>
<ReturnType>%Status</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	set tSC = $$$OK, tTitle = ""
	try {
		
		// create filter object (Module 3, exercise 4)
		set tFilter = ""
		
		
		// populate sources table
		if (..CurrentAction = "similarSources") && ..SelectedSource {
			
			set tSelSourceExtId = ##class(%iKnow.Queries.SourceAPI).GetExternalId(..Domain, ..SelectedSource)
			set tSelSourceTitle = ##class(%iKnow.Queries.MetadataAPI).GetValue(..Domain, "Title", tSelSourceExtId)
			
			// show the sources similar to ..SelectedSource (Module 3, exercise 4)
			set tSC = ##class(%iKnow.Queries.SourceAPI).GetSimilar("^News.Results.Sources", ..Domain, ..SelectedSource, ..CurrentPage, ..PageSize, tFilter)
			set tTitle = "Articles related to ""<i>"_tSelSourceTitle_"</i>"""_tTitle
			
		} elseif (..CurrentAction = "byEntity") && ..SelectedEntity {
			
			// show the sources containing a particular entity (Module 3, exercise 6)
			set tSC = ##class(%iKnow.Queries.SourceAPI).GetByEntityIds("^News.Results.Sources", ..Domain, ..SelectedEntity, ..CurrentPage, ..PageSize, tFilter)
			set tTitle = "Articles containing ""<i>"_##class(%iKnow.Queries.EntityAPI).GetValue(..Domain, ..SelectedEntity)_"</i>"""_tTitle
			
		} else {
			
			// by default, just display the most recent articles
			set tSC = ##class(%iKnow.Queries.SourceAPI).GetByDomain("^News.Results.Sources", ..Domain, ..CurrentPage, ..PageSize, tFilter)
			set tTitle = "Recent articles"_tTitle
			
		}
		quit:$$$ISERR(tSC)
		
		
		
	} catch (ex) {
		set tSC = ex.AsStatus()
	}
	quit $s($$$ISERR(tSC):$system.Status.GetErrorText(tSC), 1:tTitle)
]]></Implementation>
</Method>

<Method name="DrawSource">
<Description>
Draws the main characteristics of a source in the main table</Description>
<FormalSpec>pTable:%ZEN.Component.tablePane,pName:%String,pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tSourceId = %query("SourceId")
	set tExtId = %query("ExternalId")
	
	// by default, just output the article's title
	set tTitle = ##class(%iKnow.Queries.MetadataAPI).GetValue(..Domain, "Title", tExtId)
	
	// if no title specified, take the first sentence
	if (tTitle="") {
		do ##class(%iKnow.Queries.SentenceAPI).GetBySource(.tSentences, ..Domain, tSourceId, 1, 1)
		set tTitle = $lg($g(tSentences(1)),2)
	}
	write tTitle
		
	// now write key entities / clusters (Module 3, exercise 6)
	//set tSC = ##class(%iKnow.Semantics.ProximityAPI).GetClustersBySource(.tEntities, ..Domain, tSourceId, 1, 5)
	//set tSC = ##class(%iKnow.Semantics.DominanceAPI).GetProfileBySource(.tEntities, ..Domain, tSourceId, 1, 5, $$$SDCONCEPT)
	set tSC = ##class(%iKnow.Queries.EntityAPI).GetTop(.tEntities, ..Domain, 1, 5, tSourceId)
	quit:$$$ISERR(tSC)
	if ($d(tEntities)) {
		write "<div class=""srcProfile"" >"
		set i = ""
		for {
			set i = $order(tEntities(i),1,tEntData)
			quit:i=""
			
			set tEntId = $li(tEntData,1)
			set tEntValue = $li(tEntData,2)
			
			// Gather related entities for this entity
			set tRelEntities = ""
			set tSC = ##class(%iKnow.Queries.EntityAPI).GetRelatedById(.tRelEnts, ..Domain, tEntId, 1, 5)
			quit:$$$ISERR(tSC)
			set j = ""
			for {
				set j = $order(tRelEnts(j), 1, tRelEntData)
				quit:j=""
				set:j>1 tRelEntities = tRelEntities _ " - "
				set tRelEntities = tRelEntities _ $li(tRelEntData,2)
			}
		
			write:i>1 " -"
			write " <a title=""",tRelEntities,""" href=""javascript:zenPage.showByEntity(",tEntId,");"">", tEntValue, "</a>"
		}
		write "</div>"
	}
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawSourceMeta">
<Description><![CDATA[
Draws a metadata field (passed in through <var>pSeed</var>) for a source in the main table]]></Description>
<FormalSpec>pTable:%ZEN.Component.tablePane,pName:%String,pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tExtId = %query("ExternalId")
	
	write ##class(%iKnow.Queries.MetadataAPI).GetValue(..Domain, pSeed, tExtId)
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawSourceMetaDate">
<Description><![CDATA[
Draws a metadata date field (passed in through <var>pSeed</var>) for a source in the main table, shows date format]]></Description>
<FormalSpec>pTable:%ZEN.Component.tablePane,pName:%String,pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tExtId = %query("ExternalId")	
	
	set date = ##class(%iKnow.Queries.MetadataAPI).GetValue(..Domain, pSeed, tExtId)
	if ($length(date) > 0) {
		write $ZDATE(date, 1)
	}
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawSourceMetaTime">
<Description><![CDATA[
Draws a metadata time field (passed in through <var>pSeed</var>) for a source in the main table, shows time format]]></Description>
<FormalSpec>pTable:%ZEN.Component.tablePane,pName:%String,pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tExtId = %query("ExternalId")	
	
	set time = ##class(%iKnow.Queries.MetadataAPI).GetValue(..Domain, pSeed, tExtId)
	write $ZTIME(time, 1)
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawSourceMetaSex">
<Description>
Draws a letter for sex instead of digit from VK API representation</Description>
<FormalSpec>pTable:%ZEN.Component.tablePane,pName:%String,pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tExtId = %query("ExternalId")
	
	set sex = ##class(%iKnow.Queries.MetadataAPI).GetValue(..Domain, pSeed, tExtId)
	if (sex = "1") {
		write "F"
	} elseif (sex = "2") {
		write "M"
	}
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawSourceMetaLinkToProfile">
<FormalSpec>pTable:%ZEN.Component.tablePane,pName:%String,pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tExtId = %query("ExternalId")
	
	set id = ##class(%iKnow.Queries.MetadataAPI).GetValue(..Domain, pSeed, tExtId)
	
	write "<a href=""http://vk.com/" _ $select(id < 0: "club", 1: "id") _ $select(id < 0: -id, 1: id) _ """>" _ id _ "</a>" 
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawSourceActions">
<Description>
Draws the action buttons for a source in the main table</Description>
<FormalSpec>pTable:%ZEN.Component.tablePane,pName:%String,pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tExtId = %query("ExternalId"), tSrcId = %query("SourceId")
	
	write "<a href=""#"" onclick=""zenPage.readArticle(" _ tSrcId _ ");"" title=""Show article""><img src=""deepsee/ds2_glasses_44.png"" class=""action"" /></a>"
	write "&nbsp;&nbsp;<a href=""#"" onclick=""zenPage.showSimilar(" _ tSrcId _ ");"" title=""Show similar articles""><img src=""deepsee/ds2_radar_44.png"" class=""action"" /></a>"
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawArticle">
<Description>
Display the article contents in the article reading popup</Description>
<FormalSpec>pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tSC = $$$OK
	try {
		quit:'..SelectedSource
		
		// If a summary length is specified, display a summary instead (Module 3, exercise 6)
		if ('..SummaryLength) {
			set tSC = ##class(%iKnow.Queries.SentenceAPI).GetBySource(.tSentences, ..Domain, ..SelectedSource, 0, 0)
		} else {
			
			set tSC = ##class(%iKnow.Queries.SourceAPI).GetSummary(.tSentences, ..Domain, ..SelectedSource, ..SummaryLength)
		}
		quit:$$$ISERR(tSC)
		
		// translate sentence IDs to positions (Module 4, exercise 3)
		set tSource = ##class(%iKnow.Objects.Source).PKINDEXOpen(..Domain, ..SelectedSource)
		for tSentPos = 1:1:tSource.FirstSentenceId+tSource.SentenceCount {
			set tSentId = tSource.FirstSentenceId + tSentPos - 1
			set tSentMap(tSentId) = tSentPos
		}
		
		set:..SelectedEntity tHighlights("ENTITY", ..SelectedEntity) = "<b>"
		set tHighlights("MATCH") = "<span class=""matchF"">"
		set tHighlights("MATCH", "PARTIAL") = "<span class=""matchP"">"
		
		write "<p>"
		
		set i = ""
		for {
			set i = $order(tSentences(i), 1, tSentData)
			quit:i=""
			
			set tSentID = $li(tSentData,1)
			
			
			// Get the highlighted version of a sentence (Module 4, exercise 3)
			write !,##class(%iKnow.Queries.SentenceAPI).GetHighlighted(..Domain, tSentID, .tHighlights,,,.tSC)
			quit:$$$ISERR(tSC)
		}
		
		write "</p>"
		
	} catch (ex) {
		set tSC = ex.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<Method name="%OnAfterCreatePage">
<Description>
Ensure the main table is refreshed when opening the page a first time</Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set context = ##class(VKReader.Data.Context).%New()
	set ..Domain = context.DomainID
	
	do ..RefreshTables()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="LoadDataToDomain">
<ReturnType>%Status</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	set ..SelectedClearDomain = $select(..SelectedClearDomain = "true": 1, 1: 0)
	if (##class(VKReader.Utils).IsInteger(..SelectedNumberOfSources)) {
		if (..SelectedNumberOfSources > ##class(VKReader.Requests.APIPublicMethodsCaller).%GetParameter("MaxEntityQueryCount")) {
			set ..SelectedNumberOfSources = ##class(VKReader.Requests.APIPublicMethodsCaller).%GetParameter("MaxEntityQueryCount")
		}
		set context = ##class(VKReader.Data.Context).%New(..SelectedClearDomain)
		set status = context.AddMorePosts(..SelectedQuery, ..SelectedNumberOfSources)
		quit status
	} else {
		&js<console.log("Incorrect value for number of posts.")>
		quit $$$OK
	}
]]></Implementation>
</Method>

<Method name="GetArticleInfo">
<Description>
Utility method: return information about the current source as a proxy object</Description>
<ReturnType>%ZEN.proxyObject</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	set tObj = ##class(%ZEN.proxyObject).%New()
	set tObj.sourceId = ..SelectedSource
	set tObj.externalId = ##class(%iKnow.Queries.SourceAPI).GetExternalId(..Domain, ..SelectedSource)
	set tObj.title = ##class(%iKnow.Queries.MetadataAPI).GetValue(..Domain, "Title", tObj.externalId)
	set tObj.pubDate = ##class(%iKnow.Queries.MetadataAPI).GetValue(..Domain, "PubDate", tObj.externalId)
	set tObj.Agency = ##class(%iKnow.Queries.MetadataAPI).GetValue(..Domain, "Agency", tObj.externalId)
	quit tObj
]]></Implementation>
</Method>

<Method name="reset">
<Description>
Resets the current action</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var sc = zenPage.setProperty('CurrentAction', '');
	sc = zenPage.setProperty('Agency', '');
	sc = zenPage.setProperty('Category', '');
	sc = zenPage.setProperty('Topic', '');
	sc = zenPage.setProperty('CurrentPage', 1);
	zen('selAgency').setValue('');
	zen('selCategory').setValue('');
	zen('selTopic').setValue('');
	zenPage.refreshAll();
]]></Implementation>
</Method>

<Method name="showSimilar">
<Description>
Triggers the "similarSources" action</Description>
<FormalSpec>srcId</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var sc = zenPage.setProperty('SelectedSource', srcId);
	sc = zenPage.setProperty('CurrentPage', 1);
	sc = zenPage.setProperty('CurrentAction', 'similarSources');
	zenPage.refreshAll();
]]></Implementation>
</Method>

<Method name="showByEntity">
<Description>
Triggers the "byEntity" action</Description>
<FormalSpec>entId</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var sc = zenPage.setProperty('SelectedEntity', entId);
	sc = zenPage.setProperty('CurrentPage', 1);
	sc = zenPage.setProperty('CurrentAction', 'byEntity');
	zenPage.refreshAll();
]]></Implementation>
</Method>

<Method name="nextPage">
<Description>
Browse to the next page</Description>
<FormalSpec>direction</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var page = parseInt(zenPage.getProperty('CurrentPage')) + direction;
	if (page<=0) { page = 1 }
	var sc = zenPage.setProperty('CurrentPage', page);
	zenPage.refreshAll();
]]></Implementation>
</Method>

<Method name="readArticle">
<Description>
Opens the article reading popup</Description>
<FormalSpec>srcId</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var sc = zenPage.setProperty('SelectedSource', srcId);
	var obj = zenPage.GetArticleInfo();
	zen('titArticle').setProperty('title', obj.title);
	zen('titArticle').refreshContents();
	zen('htmlArticle').refreshContents();
	zen('modArticle').show();
]]></Implementation>
</Method>

<Method name="readAnyArticle">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	//var srcId = 1
	var srcId = zen('txtArticleId').getValue()
	var sc = zenPage.setProperty('SelectedSource', srcId);
	var obj = zenPage.GetArticleInfo();
	zen('titShowArticle').setProperty('title', obj.title);
	zen('titShowArticle').refreshContents();
	zen('htmlShowArticle').refreshContents();
	zen('modShowArticle').show();
]]></Implementation>
</Method>

<Method name="summarize">
<Description>
In the article reading pane, refresh the article to display a summary of the selected length</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var sc = zenPage.setProperty('SummaryLength', zen('txtSummaryLength').getValue());
	zen('htmlArticle').refreshContents();
]]></Implementation>
</Method>

<Method name="showArticle">
<Description>
In the article reading pane, refresh the article to display a summary of the selected length</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var sc = zenPage.setProperty('SelectedSource', zen('txtArticleId').getValue());
	zen('htmlShowArticle').refreshContents();
]]></Implementation>
</Method>

<Method name="addMorePosts">
<Description>
Adds more posts on selected query.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var sc = zenPage.setProperty('SelectedQuery', zen('txtQuery').getValue());
	var sc = zenPage.setProperty('SelectedClearDomain', zen('chkClear').getValue());
	var sc = zenPage.setProperty('SelectedNumberOfSources', zen('numPosts').getValue());
	zenPage.endModal();
	var sc = zenPage.LoadDataToDomain();
	zenPage.refreshAll();
]]></Implementation>
</Method>

<Method name="refreshAll">
<Description>
Utility method: refresh the main sources table and page subtitle</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var sc = zenPage.setProperty('PageSize', zen('PageSize').getValue());
	var title = zenPage.RefreshTables();
	zen('lblSubtitle').setProperty('label', title);
	zen('tblSources').refreshContents();
]]></Implementation>
</Method>

<Method name="goToUI">
<Description>
Utility method: browse to a %iKnow.UI page</Description>
<FormalSpec>page</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var url = '_iKnow.UI.'+page+'.zen?&domain=' + zenPage.Domain + '&source=' + zenPage.SelectedSource;
	location.href = url;
]]></Implementation>
</Method>

<XData name="Style">
<Description>
Additional CSS styling for this page</Description>
<Data><![CDATA[
<style type="text/css">
body {
	padding: 20px;
	font-family: Calibri, Verdana;
}

#pageControls {
	padding-top: 7px;
	padding-bottom: 7px;
}

.tpAction a:link {
	color: #A00000;
	text-decoration: none;
}
.tpAction a:hover {
	text-decoration: underline;
}

.modalGroup {
	width: 50% !important;
	top: 200px !important;
	left: 25% !important;
	margin-bottom: 50px !important;
	height: auto !important;
	color: white;
}

.modalGroup .titleBoxTitle {
	border: 0;
}

.modalGroup .button {
	color: white;
	background-color: rgba(12, 61, 100, 1);
	border-radius: 5px;
	border: 0;
}

img.action {
	height: 22px;
}

.matchF {
	border: 2px solid #FF9966;
	padding-right: 2px;
	padding-left: 2px;
	background: #FF9966;
}
.matchP {
	border: 2px solid #FF9966;
	padding-right: 2px;
	padding-left: 2px;
}

.srcProfile {
	margin-top: 10px;
	text-align: right;
	white-space: normal;
}

</style>
]]></Data>
</XData>
</Class>
</Export>

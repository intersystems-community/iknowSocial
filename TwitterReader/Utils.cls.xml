<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="TwitterReader.Utils">
<Super>%RegisteredObject</Super>
<TimeCreated>62718,37556.055951</TimeCreated>

<Parameter name="True">
<Default>true</Default>
</Parameter>

<Parameter name="False">
<Default>false</Default>
</Parameter>

<Parameter name="TestUnixTime">
<Default>0</Default>
</Parameter>

<Parameter name="UnixTimeTest">
<Default>1347573260</Default>
</Parameter>

<Method name="GetUnixTime">
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	quit:..#TestUnixTime ..#UnixTimeTest
	#dim h as %String = $ztimestamp	// get UTC time
	// Use $NORMALIZE to truncate the time to integer seconds:
	quit ..ConvertTimeToUnix(+h, $normalize(+$piece(h, ",", 2), -1))
]]></Implementation>
</Method>

<Method name="GetFromUnixTime">
<ClassMethod>1</ClassMethod>
<FormalSpec>unixTime:%Integer,*date:%Integer,*time:%Numeric</FormalSpec>
<Implementation><![CDATA[
	set date = $normalize(unixTime / 86400, -1) + 47117	// get integer days part and adjust to Cache time
	set time = unixTime - ..ConvertTimeToUnix(date, 0)	// get remaining time in day in seconds
]]></Implementation>
</Method>

<Method name="ConvertTimeToUnix">
<ClassMethod>1</ClassMethod>
<FormalSpec>date:%Integer,time:%Integer</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[	quit (date - 47117) * 86400 + time
]]></Implementation>
</Method>

<Method name="GetBool">
<ClassMethod>1</ClassMethod>
<FormalSpec>b:%Boolean</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit $select(b:..#True, 1:..#False)
]]></Implementation>
</Method>

<Method name="ConvertToBool">
<ClassMethod>1</ClassMethod>
<FormalSpec>text:%String</FormalSpec>
<Implementation><![CDATA[	quit $data(text) && ($zconvert(text, "l") = ..#True)
]]></Implementation>
</Method>

<Method name="UrlEncode">
<ClassMethod>1</ClassMethod>
<FormalSpec>text:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// Convert from Unicode to UTF-8 as explicit character sequences:
	set text = $zconvert(text, "O", "UTF8")
	// Encode using URL encoding:
	set text = $zconvert(text, "O", "URL")
	// Because $zconvert("URL") doesn't encode "/" characters, we do it by replacing "/" by "%2F".
	set text = $replace(text, "/", "%2F")
	quit text
]]></Implementation>
</Method>
</Class>
</Export>

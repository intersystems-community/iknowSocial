<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Twitter.GlobalLister">
<IncludeCode>%IKPublic</IncludeCode>
<Super>%iKnow.Source.Lister</Super>
<TimeCreated>62878,56320.88541</TimeCreated>

<Method name="DefaultProcessor">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[    quit "%iKnow.Source.Temp.Processor"
]]></Implementation>
</Method>

<Method name="ExpandList">
<FormalSpec>listparams:%List</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		do ..RegisterMetadataKeys($ListBuild("Title","Author","Date","Time"))
		Set tag=""
		For  {
			Set tag = $Order(^TwitterD(tag)) Quit:tag=""
    	    set ref = $lb(i%ListerClassId, ..AddGroup("^TwitterD"), tag)
			Set Text = ^TwitterD(tag,"D")
    	    Set Meta = ^TwitterD(tag,"MD")
            set sc = ..SetMetadataValues(ref, Meta)
			set sc = ..StoreTemp(ref, Text)
			Quit:$$$ISERR(sc)
		}
	} Catch {
		set ^dwerror($i(^dwerror))=$ZError
	}
   	Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetAlias">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[    Quit "Twitter"
]]></Implementation>
</Method>

<Method name="BuildFullRef">
<ClassMethod>1</ClassMethod>
<FormalSpec>domainId:%Integer,groupName:%String,localRef:%String</FormalSpec>
<Private>1</Private>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit groupName _":"_ localRef
]]></Implementation>
</Method>

<Method name="SplitFullRef">
<ClassMethod>1</ClassMethod>
<FormalSpec>domainId:%Integer,fullRef:%String,*groupName:%String,*localRef:%String</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set groupName=$p(fullRef,":",1)
	set localRef=$p(fullRef,":",2)
    Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
